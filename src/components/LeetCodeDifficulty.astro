---
import type { HTMLAttributes } from 'astro/types'
import kebabCase from 'lodash.kebabcase'

export interface Props extends HTMLAttributes<'a' | 'span'> {
  tag?: string
  difficulty: string
}

const { difficulty, tag = 'a', ...props } = Astro.props

const Tag = tag

const tagProps: Record<string, string> = {}
if (tag === 'a') {
  tagProps.href = `/difficulties/${kebabCase(difficulty)}`
}

const difficultyStyleMap: Record<string, string> = {
  Easy: 'difficulty-easy',
  Medium: 'difficulty-medium',
  Hard: 'difficulty-hard',
}

const getDifficultyCssClass: (difficulty: string) => string = (
  difficulty: string
) => {
  return Object.keys(difficultyStyleMap).includes(difficulty)
    ? difficultyStyleMap[difficulty] || ''
    : ''
}
---

<Tag
  {...tagProps}
  class:list={[
    'px-2 py-1',
    getDifficultyCssClass(difficulty),
    tag === 'a' ? 'link' : '',
    props.class,
  ]}
>
  {difficulty}
</Tag>

<style lang="scss">
  $difficulties: 'easy', 'medium', 'hard';

  @each $difficulty in $difficulties {
    .difficulty-#{$difficulty} {
      @apply bg-difficulty-#{$difficulty};
      @apply border-2;
      @apply border-difficulty-#{$difficulty};
      @apply text-difficulty-#{$difficulty};
      &.link {
        @apply hover:bg-site-bg;
        @apply hover:border-difficulty-#{$difficulty}-hover;
        @apply hover:text-difficulty-#{$difficulty}-hover;
      }
    }
  }
</style>
